<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chao="https://gitee.com/secret/chao-controls">






    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundSearch}" />
        <Setter Property="Margin" Value="5" />
        <!--  删除字体  -->
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundSearch}" />
            </Trigger>

        </Style.Triggers>

    </Style>


    <ControlTemplate x:Key="RadioButtonControlTemplate1" TargetType="{x:Type RadioButton}">
        <Grid
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="radioButtonBorder"
                Background="Transparent"
                BorderThickness="0">
                <Grid x:Name="markGrid" Margin="2">
                    <Path
                        x:Name="optionMark"
                        Margin="2,2,0,0"
                        Data="M0,5 5,10 13,1"
                        Stroke="{DynamicResource ForegroundSearch}"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Grid>
            </Border>
            <ContentPresenter
                x:Name="contentPresenter"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="True">
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Margin="14,0,0,0"
                                            SnapsToDevicePixels="True"
                                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                            StrokeDashArray="1 2"
                                            StrokeThickness="1" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>




    <!--  radiobutton 样式  -->
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
    <Style x:Key="RadioButtonStyleSide" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundGlobal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="40" />
        <Setter Property="GroupName" Value="SideRadioButton" />
        <!--  删除字体  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border
                            x:Name="radioButtonBorder"
                            Grid.Column="0"
                            Margin="1,1,2,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="100">
                            <Grid x:Name="markGrid" Margin="2">
                                <Rectangle
                                    x:Name="optionMark"
                                    MinWidth="5"
                                    MinHeight="30" />
                            </Grid>
                        </Border>
                        <Image Source="{DynamicResource ImageSource}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="2"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource BackgroundTitle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="gray"/>-->
                            <!--<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>-->
                            <Setter TargetName="optionMark" Property="Fill" Value="gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            <!--<Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource  BackgroundTitle}"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="optionMark" Property="Fill" Value="Orange" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>