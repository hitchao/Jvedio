<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chao="https://gitee.com/secret/chao-controls"
    xmlns:converter="clr-namespace:Jvedio.Utils.Converter;assembly=Jvedio.Utils">

    <!--  Converter  -->
    <converter:Hide2TextConverter x:Key="Hide2TextConverter" />



    <converter:SmallerPathConverter x:Key="SmallerPathConverter" />
    <converter:FilePathToDirConverter x:Key="FilePathToDirConverter" />

    <converter:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
    <converter:MyColorToBrushConverter x:Key="MyColorToBrushConverter" />
    <converter:BoolToOppositeVisibilityConverter x:Key="BoolToOppositeVisibilityConverter" />
    <converter:SmallerThicknessConverter x:Key="SmallerThicknessConverter" />
    <converter:OppositeBooleanConverter x:Key="OppositeBooleanConverter" />
    <converter:WidthConverter x:Key="WidthConverter" />
    <converter:BiggerWidthConverter x:Key="BiggerWidthConverter" />
    <converter:BoolToImageStretchConverter x:Key="BoolToImageStretchConverter" />
    <converter:BitToGBConverter x:Key="BitToGBConverter" />
    <converter:WidthToMarginConverter x:Key="WidthToMarginConverter" />
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    <converter:StringToUriStringConverter x:Key="StringToUriStringConverter" />

    <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converter:ImageTypeEnumConverter x:Key="ImageTypeEnumConverter" />
    <converter:ViewTypeEnumConverter x:Key="ViewTypeEnumConverter" />
    <converter:IntToCheckedConverter x:Key="IntToCheckedConverter" />
    <converter:MultiIntToMarginConverter x:Key="MultiIntToMarginConverter" />
    <converter:SmallerValueConverter x:Key="SmallerValueConverter" />
    <!--<converter:LanguageTypeEnumConverter x:Key="LanguageTypeEnumConverter" />-->

    <!--  字体  -->
    <converter:BoolToFontBoldConverter x:Key="BoolToFontBoldConverter" />
    <converter:BoolToFontItalicConverter x:Key="BoolToFontItalicConverter" />
    <converter:BoolToUnderLineConverter x:Key="BoolToUnderLineConverter" />
    <converter:FontFamilyConverter x:Key="FontFamilyConverter" />
    <converter:LabelToListConverter x:Key="LabelToListConverter" />
    <converter:PlusToVisibilityConverter x:Key="PlusToVisibilityConverter" />
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />


    <DropShadowEffect
        x:Key="NormalDropShadowEffect"
        BlurRadius="20"
        Direction="-90"
        RenderingBias="Quality"
        ShadowDepth="0" />
    <DropShadowEffect
        x:Key="PopupDropShadowEffect"
        BlurRadius="10"
        Direction="-90"
        RenderingBias="Quality"
        ShadowDepth="0" />
    <DropShadowEffect
        x:Key="BlueDropShadowEffect"
        BlurRadius="10"
        Direction="-90"
        RenderingBias="Quality"
        ShadowDepth="0"
        Color="SkyBlue" />

    <DropShadowEffect
        x:Key="ZeroShadowEffect"
        BlurRadius="0"
        Direction="-90"
        RenderingBias="Quality"
        ShadowDepth="0" />
    <BlurEffect
        x:Key="NormalBlurEffect"
        KernelType="Box"
        Radius="4"
        RenderingBias="Quality" />

    <Style x:Key="Ellipse" TargetType="{x:Type Ellipse}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="True">
                <Setter Property="Fill" Value="{DynamicResource Window.Foreground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="False">
                <Setter Property="Fill" Value="{DynamicResource Window.Foreground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Ellipse2" TargetType="{x:Type Ellipse}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="True">
                <Setter Property="Fill" Value="#AD744C" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="False">
                <Setter Property="Fill" Value="#DD744C" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlueEllipse" TargetType="{x:Type Ellipse}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="True">
                <Setter Property="Fill" Value="#1177BB" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Canvas}, Mode=FindAncestor}}" Value="False">
                <Setter Property="Fill" Value="#0E639C" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="OrangeEllipse" TargetType="Ellipse">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Fill" Value="#AD744C" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Canvas}}, Path=IsMouseOver}" Value="False">
                <Setter Property="Fill" Value="#E07C4A" />
            </DataTrigger>
        </Style.Triggers>
    </Style>






    <Style x:Key="SimpleBorder" TargetType="{x:Type Border}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>







    <Style x:Key="BaseFilterTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Left" />
        <!--  删除字体  -->
        <Setter Property="FontSize" Value="15" />
        <!--<Setter Property="MinWidth" Value="100"/>-->
        <Setter Property="Margin" Value="10,5" />
        <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}" />
    </Style>

    <Style x:Key="SearchCandidateTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}" />
    </Style>

    <Style x:Key="ToolsBarBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Window.Side.Background}" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Tab.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="FlatBorderStyle"
        BasedOn="{StaticResource ToolsBarBorderStyle}"
        TargetType="Border">

        <Setter Property="CornerRadius" Value="0" />

    </Style>



    <Style x:Key="TagBarBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Margin" Value="5,2" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{DynamicResource Window.Title.Background}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Side.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActorInfoBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="HoldEnd">
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="Gray"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="Transparent"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Title.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RoundBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Window.Side.Background}" />
        <Setter Property="Background" Value="{DynamicResource ListBoxItem.Background}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ListBoxItem.Hover.Background}" />

                <!--<Setter Property="Background" Value="#EAFCFA" />
                <Setter Property="BorderBrush" Value="#79DFD5" />-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridCloseBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="CornerRadius" Value="3" />


        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard FillBehavior="HoldEnd">
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="Red"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="Transparent"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReturnBorder" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Opacity" Value="0.8" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=IsMouseOver}" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DropBorderStyle" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Margin" Value="20,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <DrawingBrush
                    TileMode="Tile"
                    Viewport="0,0,8,8"
                    ViewportUnits="Absolute">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <GeometryDrawing Brush="{DynamicResource Window.Foreground}">
                                <GeometryDrawing.Geometry>
                                    <GeometryGroup>
                                        <RectangleGeometry Rect="0,0,50,50" />
                                        <RectangleGeometry Rect="50,50,50,50" />
                                    </GeometryGroup>
                                </GeometryDrawing.Geometry>
                            </GeometryDrawing>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="MultiLineTextBox" TargetType="TextBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource Window.Side.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Window.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Global.Foreground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource Window.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Window.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style x:Key="HoverLabel" TargetType="Label">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource Global.Foreground}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Cursor" Value="Hand" />
        <!--  删除字体  -->
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border
                        Padding="4"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Title.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundBorder" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Side.Hover.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RoundHoverBorder" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{DynamicResource Window.Title.Background}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ListBoxItem.Selected.Active.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ListBoxItem.Selected.Active.BorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="BgHoverBorder" TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="{DynamicResource Window.Title.Background}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Opacity" Value="0.8" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Window.Title.Hover.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style
        x:Key="HoverBorder"
        BasedOn="{StaticResource RoundBorder}"
        TargetType="Border">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content}" />
    </Style>




</ResourceDictionary>